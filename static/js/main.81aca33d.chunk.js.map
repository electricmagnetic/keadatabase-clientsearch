{"version":3,"sources":["nzbbtef/colours/transforms.js","nzbbtef/1-colourTransform.js","nzbbtef/2-tokenise.js","nzbbtef/colours/library.js","nzbbtef/3-getColours.js","nzbbtef/helpers.js","nzbbtef/4-validate.js","nzbbtef/nzbbtef.js","BandComboEngine.js","App.js","serviceWorker.js","index.js"],"names":["longColours","Metal","Uncoloured","Black","Grey","White","Red","Orange","Yellow","Pink","Crimson","Purple","Blue","Green","Brown","longCombinedColours","metal","uncoloured","paleorange","neonorange","fluoroorange","palepink","neonpink","fluoropink","hotpink","crimson","darkpink","lightpurple","paleblue","lightblue","mediumblue","darkblue","neongreen","fluorogreen","lightgreen","limegreen","palegreen","mediumgreen","darkgreen","black","grey","white","red","orange","yellow","pink","purple","blue","green","brown","transform","nzbbtef","colours","Object","keys","reduce","currentSearch","replace","RegExp","colourTransform","symbolBandiser","moo","symbol","match","value","symbolColour","bandColour","WS","error","idBandiser","inscription","tokeniser","symbolBand","partSeparator","bandSeparator","legSeparator","colouredIdBand","uncolouredIdBand","nullBand","colouredBand","tokenise","reset","Array","from","map","token","type","assign","tokens","filter","colourLibrary","M","label","PO","NO","PP","NP","LPu","PB","LB","B","DB","NG","LG","PG","G","DG","K","Gr","W","R","O","Y","P","CP","Pu","Br","getColours","isColourToken","includes","colour","countInstancesInArray","tokenTypes","search","count","tokenType","getSeparatorsAsString","separator","join","trim","compileValidators","validators","values","isValid","validator","validateLegSeparators","split","validatePartSeparators","separatorSubsetAsString","validateColours","areChildrenValid","validColour","undefined","validPredecessors","validate","legSeparators","partSeparators","getValidatedTokens","ColourBlock","className","style","background","width","height","border","BandCombo","bandCombo","bird","slug","name","key","symbols","BandCombos","bandCombos","flattenTokens","accumulator","concat","Set","getSymbols","BandComboEngine","props","state","selected","this","lazyFetchBandCombos","bandCombosFetch","array","others","pending","rejected","fulfilled","results","flattenedTokens","allTokens","currentValue","sort","options","isSymbol","isColour","filteredBandCombos","length","onClick","selectHintOnEnter","highlightOnlyResult","placeholder","id","ignoreDiacritics","maxResults","paginationText","multiple","onChange","setState","renderToken","option","index","onRemove","renderMenuItemChildren","Component","connect","url","force","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.81aca33d.chunk.js","sourcesContent":["// Order is important (from most specific to least specific, e.g. Pale Orange before Orange)\n\nconst longColours = {\n  Metal: 'M',\n  Uncoloured: 'M',\n  'Pale Orange': 'PO',\n  'Neon Orange': 'NO',\n  'Fluoro Orange': 'NO',\n  'Pale Pink': 'PP',\n  'Neon Pink': 'NP',\n  'Fluoro Pink': 'NP',\n  'Hot Pink': 'NP',\n  'Dark Pink': 'CP',\n  'Pale Blue': 'PB',\n  'Light Blue': 'LB',\n  'Medium Blue': 'B',\n  'Dark Blue': 'DB',\n  'Neon Green': 'NG',\n  'Fluoro Green': 'NG',\n  'Light Green': 'LG',\n  'Lime Green': 'LG',\n  'Pale Green': 'PG',\n  'Medium Green': 'G',\n  'Dark Green': 'DG',\n  'Light Purple': 'LPu',\n  Black: 'K',\n  Grey: 'Gr',\n  White: 'W',\n  Red: 'R',\n  Orange: 'O',\n  Yellow: 'Y',\n  Pink: 'P',\n  Crimson: 'CP',\n  Purple: 'Pu',\n  Blue: 'B',\n  Green: 'G',\n  Brown: 'Br',\n};\n\nconst longCombinedColours = {\n  metal: 'M',\n  uncoloured: 'M',\n  paleorange: 'PO',\n  neonorange: 'NO',\n  fluoroorange: 'NO',\n  palepink: 'PP',\n  neonpink: 'NP',\n  fluoropink: 'NP',\n  hotpink: 'NP',\n  crimson: 'CP',\n  darkpink: 'CP',\n  lightpurple: 'LPu',\n  paleblue: 'PB',\n  lightblue: 'LB',\n  mediumblue: 'B',\n  darkblue: 'DB',\n  neongreen: 'NG',\n  fluorogreen: 'NG',\n  lightgreen: 'LG',\n  limegreen: 'LG',\n  palegreen: 'PG',\n  mediumgreen: 'G',\n  darkgreen: 'DG',\n  black: 'K',\n  grey: 'Gr',\n  white: 'W',\n  red: 'R',\n  orange: 'O',\n  yellow: 'Y',\n  pink: 'P',\n  purple: 'Pu',\n  blue: 'B',\n  green: 'G',\n  brown: 'Br',\n};\n\nconst shortColours = {\n  M: 'Metal',\n  PO: 'Pale Orange',\n  NO: 'Neon Orange',\n  PP: 'Pale Pink',\n  NP: 'Neon Pink',\n  LPu: 'Light Purple',\n  PB: 'Pale Blue',\n  LB: 'Light Blue',\n  B: 'Medium Blue',\n  DB: 'Dark Blue',\n  NG: 'Neon Green',\n  LG: 'Light Green',\n  PG: 'Pale Green',\n  G: 'Medium Green',\n  DG: 'Dark Green',\n  K: 'Black',\n  Gr: 'Grey',\n  W: 'White',\n  R: 'Red',\n  O: 'Orange',\n  Y: 'Yellow',\n  P: 'Pink',\n  CP: 'Crimson',\n  Pu: 'Purple',\n  Br: 'Brown',\n};\n\nexport { longColours, longCombinedColours, shortColours };\n","import { longColours, longCombinedColours } from './colours/transforms';\n\n/**\n This function iterates over the colour object given, doing a (word bounded) find/replace.\n - Use of \\b necessary to not transform PaleBlue to PaleB\n - Double backslash because string escaping necessary\n */\nconst transform = (nzbbtef, colours) =>\n  Object.keys(colours).reduce(\n    (nzbbtef, currentSearch) =>\n      nzbbtef.replace(new RegExp(`\\\\b${currentSearch}\\\\b`, 'gi'), colours[currentSearch]),\n    nzbbtef\n  );\n\nconst colourTransform = nzbbtef => transform(transform(nzbbtef, longColours), longCombinedColours);\n\nexport default colourTransform;\n","import * as moo from 'moo';\n\nlet symbolBandiser = moo.compile({\n  symbol: { match: /\\S+\\son\\s/, value: value => value.match(/\\S+/)[0] },\n  symbolColour: /^[a-zA-Z]+/,\n  bandColour: /[a-zA-Z]+$/,\n  WS: /[ \\t]+/,\n  error: moo.error,\n});\n\nlet idBandiser = moo.compile({\n  bandColour: /^[a-zA-Z]+/,\n  inscription: { match: /\\(\\S+\\)/, value: value => value.match(/[^()]+/)[0] },\n  error: moo.error,\n});\n\nlet tokeniser = moo.compile({\n  symbolBand: /\\w+\\s\\S+\\son\\s\\w+/,\n  partSeparator: /\\/\\//,\n  bandSeparator: /\\//,\n  legSeparator: /-/,\n  colouredIdBand: /[a-zA-Z]+\\(\\S+\\)/,\n  uncolouredIdBand: /\\(\\S+\\)/,\n  nullBand: /x/,\n  colouredBand: /[a-zA-Z]+/,\n  WS: /[ \\t]+/,\n  error: moo.error,\n});\n\n/**\n Tokenise the string using `moo` as per the rules defined above, then further process certain types further.\n */\nconst tokenise = nzbbtef => {\n  tokeniser.reset(nzbbtef);\n\n  const allTokens = Array.from(tokeniser).map(token => {\n    // If nested token, initialise tokeniser\n    switch (token.type) {\n      case 'symbolBand':\n        symbolBandiser.reset(token.value);\n        break;\n      case 'uncolouredIdBand':\n        idBandiser.reset(`M${token.value}`); // Assume metal band\n        break;\n      case 'colouredIdBand':\n        idBandiser.reset(token.value);\n        break;\n      default:\n        break;\n    }\n\n    // Depending on type, use tokeniser (as initialised) or otherwise just return the token as is\n    switch (token.type) {\n      case 'symbolBand':\n        return Object.assign(\n          {},\n          token,\n          { type: 'tokenisedSymbolBand' },\n          { tokens: Array.from(symbolBandiser) }\n        );\n      case 'uncolouredIdBand':\n      case 'colouredIdBand':\n        return Object.assign(\n          {},\n          token,\n          { type: 'tokenisedIdBand' },\n          { tokens: Array.from(idBandiser) }\n        );\n      default:\n        return token;\n    }\n  });\n\n  // Remove whitespace tokens as they are not helpful after tokenisation\n  return allTokens.filter(token => token.type !== 'WS');\n};\n\nexport default tokenise;\n","const colourLibrary = {\n  M: {\n    label: 'Metal',\n    value: 'linear-gradient(to right,#808080, #ddd, #808080)',\n  },\n  PO: {\n    label: 'Pale Orange',\n    value: '#FFD03B',\n  },\n  NO: {\n    label: 'Neon Orange',\n    value: '#FFB343',\n  },\n  PP: {\n    label: 'Pale Pink',\n    value: '#FBC6B7',\n  },\n  NP: {\n    label: 'Neon Pink',\n    value: '#FF4BF2',\n  },\n  LPu: {\n    label: 'Light Purple',\n    value: '#AE5DFF',\n  },\n  PB: {\n    label: 'Pale Blue',\n    value: '#9EC7F8',\n  },\n  LB: {\n    label: 'Light Blue',\n    value: '#2B8FB3',\n  },\n  B: {\n    label: 'Medium Blue',\n    value: '#0060EE',\n  },\n  DB: {\n    label: 'Dark Blue',\n    value: '#0000D6',\n  },\n  NG: {\n    label: 'Neon Green',\n    value: '#00FF00',\n  },\n  LG: {\n    label: 'Light Green',\n    value: '#ABFE82',\n  },\n  PG: {\n    label: 'Pale Green',\n    value: '#4DC350',\n  },\n  G: {\n    label: 'Medium Green',\n    value: '#00A800',\n  },\n  DG: {\n    label: 'Dark Green',\n    value: '#003A00',\n  },\n  K: {\n    label: 'Black',\n    value: '#000000',\n  },\n  Gr: {\n    label: 'Grey',\n    value: '#808080',\n  },\n  W: {\n    label: 'White',\n    value: '#ffffff',\n  },\n  R: {\n    label: 'Red',\n    value: '#DA0000',\n  },\n  O: {\n    label: 'Orange',\n    value: '#FF6600',\n  },\n  Y: {\n    label: 'Yellow',\n    value: '#F4EE00',\n  },\n  P: {\n    label: 'Pink',\n    value: '#FE94FE',\n  },\n  CP: {\n    label: 'Crimson',\n    value: '#CC044B',\n  },\n  Pu: {\n    label: 'Purple',\n    value: '#9900CC',\n  },\n  Br: {\n    label: 'Brown',\n    value: '#996633',\n  },\n};\n\nexport default colourLibrary;\n","import colourLibrary from './colours/library';\n\nconst getColours = tokens => {\n  return tokens.map(token => {\n    const isColourToken = ['symbolColour', 'bandColour', 'colouredBand'].includes(token.type);\n\n    return Object.assign(\n      {},\n      token,\n      { isColourToken: isColourToken },\n      isColourToken && { colour: colourLibrary[token.value] },\n      token.tokens && { tokens: getColours(token.tokens) }\n    );\n  });\n};\nexport default getColours;\n","/**\n  Helper function that counts the number of the given search term in the array specified\n */\nconst countInstancesInArray = (tokenTypes, search) =>\n  tokenTypes.reduce((count, tokenType) => (tokenType.includes(search) ? (count += 1) : count), 0);\n\n/**\n  Helper function that compile the separators as a string separated by spaces.\n */\nconst getSeparatorsAsString = tokens =>\n  tokens\n    .filter(token => token.type.includes('Separator'))\n    .map(separator => separator.type)\n    .join(' ')\n    .trim();\n\n/**\n  Helper function that compiles logic across validators (all must be true to be evaluated as true)\n */\nconst compileValidators = validators =>\n  Object.values(validators).reduce((isValid, validator) => validator.validator && isValid, true);\n\nexport { countInstancesInArray, getSeparatorsAsString, compileValidators };\n","import { countInstancesInArray, getSeparatorsAsString, compileValidators } from './helpers';\n\n/**\n  Only 0 to 1 legSeparators permissible\n */\nconst validateLegSeparators = tokens =>\n  countInstancesInArray(getSeparatorsAsString(tokens).split(' '), 'legSeparator') <= 1;\n\n/**\n  Only 0 to 1 partSeparators permissible per leg.\n  Compiles the token types as a string, then does analysis between legSeparator and partSeparator.\n */\nconst validatePartSeparators = tokens =>\n  getSeparatorsAsString(tokens)\n    .split('legSeparator')\n    .reduce(\n      (isValid, separatorSubsetAsString) =>\n        countInstancesInArray(separatorSubsetAsString.split(' '), 'partSeparator') <= 1 && isValid,\n      true\n    );\n\n/**\n  Validates that all tokens that should be have a colour, have a valid colour.\n  Also needs to analyse child components (e.g. bandColour).\n  Logic constructed based on whether a token is a colour token, and if it has children.\n */\nconst validateColours = tokens => {\n  return tokens.reduce((isValid, token) => {\n    const validators = Object.assign(\n      {},\n      token.tokens && { areChildrenValid: { validator: validateColours(token.tokens) } },\n      token.isColourToken && { validColour: { validator: token.colour !== undefined } },\n      { validPredecessors: { validator: isValid } }\n    );\n\n    return compileValidators(validators);\n  }, true);\n};\n\nconst validate = tokens => {\n  const validators = {\n    legSeparators: { label: 'Leg separators valid?', validator: validateLegSeparators(tokens) },\n    partSeparators: { label: 'Part separators valid?', validator: validatePartSeparators(tokens) },\n    colours: { label: 'Colours valid?', validator: validateColours(tokens) },\n  };\n\n  const isValid = compileValidators(validators);\n\n  return {\n    isValid: isValid,\n    validators: validators,\n  };\n};\n\nexport default validate;\n","import colourTransform from './1-colourTransform';\nimport tokenise from './2-tokenise';\nimport getColours from './3-getColours';\nimport validate from './4-validate';\nimport createStructure from './5-createStructure';\n\nconst getValidatedTokens = nzbbtef => {\n  const tokens = getColours(tokenise(colourTransform(nzbbtef)));\n  return validate(tokens).isValid ? tokens : undefined;\n};\n\nexport { getValidatedTokens };\n\nconst nzbbtef = nzbbtef => {\n  const tokens = getValidatedTokens(nzbbtef);\n  return tokens ? createStructure(tokens) : undefined;\n};\n\nexport default nzbbtef;\n","import React, { Component } from 'react';\nimport { connect } from 'react-refetch';\nimport { Typeahead, MenuItem, Menu, Token, ClearButton } from 'react-bootstrap-typeahead';\n\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport 'react-bootstrap-typeahead/css/Typeahead-bs4.css';\n\nimport { getValidatedTokens } from './nzbbtef/nzbbtef';\nimport colourLibrary from './nzbbtef/colours/library';\nimport './BandComboEngine.css';\n\nconst API_URL = `https://data.keadatabase.nz/band_combos/`;\n\nconst ColourBlock = ({ colour }) => (\n  <>\n    <div\n      className=\"d-inline-block mr-1\"\n      style={{\n        background: colourLibrary[colour].value,\n        width: 10,\n        height: 10,\n        border: '1px solid #000',\n      }}\n    />\n    {colourLibrary[colour].label}\n  </>\n);\n\nconst BandCombo = ({ bandCombo }) => (\n  <div className=\"col-md-3\">\n    <div className=\"card mb-3\">\n      <div className=\"card-body\">\n        <div className=\"card-text\">\n          <small>{bandCombo.bird.slug}</small>\n          <h2 className=\"h5\">{bandCombo.name}</h2>\n          <dl className=\"mb-0\">\n            {bandCombo.colours && (\n              <>\n                <dt>Colours</dt>\n                {bandCombo.colours.map(colour => (\n                  <dd key={colour} className=\"mr-2 d-inline-block\">\n                    <ColourBlock key={colour} colour={colour} />\n                  </dd>\n                ))}\n              </>\n            )}\n            {bandCombo.symbols && (\n              <>\n                <dt>Symbols</dt>\n                {bandCombo.symbols.map(symbol => (\n                  <dd key={symbol} className=\"mr-2 d-inline-block\">\n                    {symbol}\n                  </dd>\n                ))}\n              </>\n            )}\n          </dl>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nconst BandCombos = ({ bandCombos }) => (\n  <div className=\"BandCombos\">\n    <div className=\"row\">\n      {bandCombos.map(bandCombo => (\n        <BandCombo key={bandCombo.bird.slug} bandCombo={bandCombo} />\n      ))}\n    </div>\n  </div>\n);\n\nconst flatten = array =>\n  array && array.reduce((accumulator, currentValue) => accumulator.concat(currentValue), []);\n\nconst flattenTokens = tokens =>\n  tokens &&\n  tokens.reduce(\n    (accumulator, tokens) =>\n      accumulator.concat((tokens.tokens && flattenTokens(tokens.tokens)) || tokens),\n    []\n  );\nconst getColours = tokens => [\n  ...new Set(tokens.filter(token => token && token.isColourToken).map(token => token.value)),\n];\nconst getSymbols = tokens => [\n  ...new Set(tokens.filter(token => token && token.type === 'symbol').map(token => token.value)),\n];\n\nclass BandComboEngine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: [],\n    };\n  }\n\n  componentDidMount() {\n    this.props.lazyFetchBandCombos();\n  }\n\n  render() {\n    if (this.props.bandCombosFetch) {\n      const { bandCombosFetch, ...others } = this.props;\n      if (bandCombosFetch.pending) {\n        return <span>Loading</span>;\n      } else if (bandCombosFetch.rejected) {\n        return <span>Error</span>;\n      } else if (bandCombosFetch.fulfilled) {\n        const bandCombos = bandCombosFetch.value.results.map(bandCombo => {\n          const tokens = getValidatedTokens(bandCombo.name);\n          const flattenedTokens = flattenTokens(tokens);\n\n          return Object.assign(\n            {},\n            bandCombo,\n            {\n              tokens: tokens,\n              flattenedTokens: flattenTokens(tokens),\n            },\n            tokens && {\n              colours: getColours(flattenedTokens),\n              symbols: getSymbols(flattenedTokens),\n            }\n          );\n        });\n\n        const allTokens = flatten(bandCombos.map(bandCombo => bandCombo.flattenedTokens));\n        const symbols = getSymbols(allTokens).sort();\n        const colours = getColours(allTokens).sort();\n\n        //console.log(this.state.selected);\n\n        const options = []\n          .concat(symbols.map(symbol => Object.assign({}, { symbol: symbol, label: symbol }, {isSymbol: true, isColour: false})))\n          .concat(colours.map(colour => Object.assign({}, { colour: colour }, {isColour: true, isSymbol: false}, colourLibrary[colour])));\n\n        const filteredBandCombos = bandCombos.filter(bandCombo => (\n          this.state.selected.length > 0 ? this.state.selected.reduce((accumulator, currentValue) => {\n            if (currentValue.isColour && bandCombo.colours) return (bandCombo.colours.includes(currentValue.colour)) && accumulator;\n            else if (currentValue.isSymbol && bandCombo.symbols) return (bandCombo.symbols.includes(currentValue.symbol)) && accumulator;\n            else return accumulator;\n          }, true) : true\n        ))\n\n        return (\n          <>\n            <button onClick={this.props.lazyFetchBandCombos} className=\"btn btn-primary mb-3\">Refresh</button>\n            <div className=\"card mb-3\">\n              <div className=\"card-body\">\n                <div className=\"card-text\">\n                  <dl className=\"mb-0\">\n                    <dt>Colours</dt>\n                    {colours.map(colour => (\n                      <dd key={colour} className=\"mr-2 d-inline-block\">\n                        <ColourBlock key={colour} colour={colour} />\n                      </dd>\n                    ))}\n                    <dt>Symbols</dt>\n                    {symbols.map(symbol => (\n                      <dd key={symbol} className=\"mr-2 d-inline-block\">\n                        {symbol}\n                      </dd>\n                    ))}\n                  </dl>\n                </div>\n              </div>\n            </div>\n            <Typeahead\n              className=\"BandComboTypeahead mb-3\"\n              options={options}\n              selectHintOnEnter\n              highlightOnlyResult\n              name=\"bandCombo\"\n              placeholder=\"Type band symbol or colour\"\n              id=\"bandCombo\"\n              ignoreDiacritics={false}\n              maxResults={100}\n              paginationText=\"Display more…\"\n              multiple\n              selected={this.state.selected}\n              onChange={selected => this.setState({selected: selected})}\n              renderToken={(option, props, index) => {\n                if(option.isColour) return <Token onRemove={props.onRemove} option={option} key={index} className=\"token-colour\"><ColourBlock colour={option.colour} /></Token>;\n                else if (option.isSymbol) return <Token onRemove={props.onRemove} option={option} key={index} className=\"token-symbol\"><strong>{option.label}</strong></Token>;\n                else return <Token onRemove={props.onRemove} option={option}><>{option}</></Token>;\n              }}\n              renderMenuItemChildren={(option, props, index) => {\n                if (option.isColour) return <><ColourBlock colour={option.colour} /><small className=\"ml-2\">(Colour)</small></>;\n                else if (option.isSymbol) return <>{ option.label }<small className=\"ml-2\">(Symbol)</small></>;\n                else return <>{option}</>;\n              }}\n            />\n            <BandCombos bandCombos={filteredBandCombos} {...others} />\n          </>\n        );\n      }\n    } else return null;\n  }\n}\n\nexport default connect(props => ({\n  lazyFetchBandCombos: () => ({\n    bandCombosFetch: { url: `${API_URL}`, force: true },\n  }),\n}))(BandComboEngine);\n","import React, { Component } from 'react';\nimport { connect } from 'react-refetch';\n\nimport BandComboEngine from './BandComboEngine';\n\nconst App = () => (\n  <main>\n    <div className=\"container my-3\">\n      <h1>\n        Band Combo Engine <small>NZBBTEF PoC</small>\n      </h1>\n      <BandComboEngine />\n    </div>\n  </main>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'jquery/dist/jquery.slim';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}